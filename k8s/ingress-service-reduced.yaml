apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-service
  namespace: redis-stream-demo
  labels:
    app: ingress-service
spec:
  replicas: 2  # Reduced from 3
  selector:
    matchLabels:
      app: ingress-service
  template:
    metadata:
      labels:
        app: ingress-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "80"
    spec:
      containers:
      - name: ingress-service
        image: localhost:5000/ingress-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: app-config
        resources:
          requests:
            cpu: "200m"  # Reduced from 500m
            memory: "512Mi"  # Reduced from 1Gi
          limits:
            cpu: "500m"  # Reduced from 1
            memory: "1Gi"  # Reduced from 2Gi
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-service
  namespace: redis-stream-demo
spec:
  selector:
    app: ingress-service
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
